{"ast":null,"code":"import { takeLatest, put, all, call, takeEvery } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess);\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeEvery(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/daminivaru/Desktop/2020 CODE/e-commerce-app/clean-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","takeEvery","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call, takeEvery } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions'\n\nimport { \n    auth, \n    googleProvider, \n    createUserProfileDocument,\n    getCurrentUser\n} from '../../firebase/firebase.utils';\n\n\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user)\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user)\n    } catch(error) {\n     yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated () {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\n\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield(put(signOutSuccess))\n    }catch(error) {\n        yield put(signOutFailure(error));\n    }\n}\n\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\nexport function* onSignOutStart() {\n    yield takeEvery(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart), \n        call(onCheckUserSession),\n        call(onSignOutStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}